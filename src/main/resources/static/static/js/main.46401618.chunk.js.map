{"version":3,"sources":["components/Project/CreateProjectButton.js","actions/Type.js","actions/ProjectActions.js","components/Project/ProjectItem.js","components/Dashboard.js","securityUtils/setJWTToken.js","actions/SecurityActions.js","components/Layout/Header.js","components/Project/AddProject.js","components/ProjectBoard/ProjectTasks/ProjectTask.js","actions/BacklogActions.js","components/ProjectBoard/Backlog.js","components/ProjectBoard/ProjectBoard.js","reducers/errorReducer.js","reducers/projectReducer.js","reducers/backlogReducer.js","reducers/securityReducer.js","reducers/index.js","store.js","components/Project/UpdateProject.js","components/ProjectBoard/ProjectTasks/AddProjectTask.js","components/ProjectBoard/ProjectTasks/UpdateProjectTask.js","components/Layout/Landing.js","components/UserManagement/Register.js","components/UserManagement/Login.js","securityUtils/SecureRoute.js","App.js","index.js"],"names":["CreateProjectButton","Fragment","to","className","GET_ERRORS","GET_PROJECTS","GET_PROJECT","DELETE_PROJECT","GET_BACKLOG","GET_PROJECT_TASK","DELETE_PROJECT_TASK","SET_CURRENT_USER","createProject","project","history","dispatch","a","axios","post","window","location","href","type","payload","console","log","response","data","ProjectItem","onDeleteClick","id","props","deleteProject","this","projectIdentifier","projectName","description","onClick","bind","Component","connect","delete","DashBoard","getProjects","projects","map","item","state","get","res","setJWTToken","token","defaults","headers","common","logout","localStorage","removeItem","Header","headerLinks","security","validToken","user","userIsAuthenticated","fullname","userIsNotAuthenticated","AddProject","onChange","onSubmit","startDate","endDate","errors","nextProps","error","setState","e","target","name","value","preventDefault","newProject","classnames","placeholder","ProjectTask","backlog_id","pt_id","deleteProjectTask","priorityString","priorityClass","project_task","priority","projectSequence","summary","acceptanceCriteria","confirm","Backlog","tasks","project_tasks_prop","todoItems","inProgressItems","doneItems","i","length","status","push","ProjectBoard","match","params","getBacklog","BoardContent","project_tasks","backlog","projectNotFound","role","boardAlgorithm","initialState","booleanActionPayload","combineReducers","action","filter","middleware","thunk","store","__REDUX_DEVTOOLS_EXTENSION__","createStore","rootReducer","compose","applyMiddleware","UpdateProject","getProject","updateProject","disabled","AddProjectTask","dueDate","newTask","addProjectTask","UpdateProjectTask","getProjectTask","updatedTask","updateProjectTask","patch","Landing","Register","username","password","confirmPassword","newUser","createNewUser","Login","LogonRequest","login","LoginRequest","setItem","decoded","jwt_decode","component","otherProps","render","jwtToken","decoded_jwtToken","currentTime","Date","now","exp","App","exact","path","SecureRoute","Dashboard","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.46401618.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CreateProjectButton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Link to=\"/addProject\" className=\"btn btn-lg btn-info\">\r\n        Create a Project\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default CreateProjectButton;\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_PROJECTS = \"GET_PROJECTS\";\r\nexport const GET_PROJECT = \"GET_PROJECT\";\r\nexport const DELETE_PROJECT = \"DELETE_PROJECT\";\r\n\r\n// Types for backlogs actions\r\nexport const GET_BACKLOG = \"GET_BACKLOG\";\r\nexport const GET_PROJECT_TASK = \"GET_PROJECT_TASK\";\r\nexport const DELETE_PROJECT_TASK = \"DELETE_PROJECT_TASK\";\r\n\r\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"./Type\";\r\n\r\nexport const createProject = (project, history) => async (dispatch) => {\r\n  try {\r\n    await axios.post(\r\n      // \"http://localhost:8080/api/project\"\r\n      \"/api/project\",\r\n      project\r\n    );\r\n    // history.push(\"/dashboard\");\r\n    window.location.href = \"/dashboard\";\r\n\r\n    dispatch({ type: GET_ERRORS, payload: {} });\r\n  } catch (err) {\r\n    console.log(err.response.data);\r\n    dispatch({ type: GET_ERRORS, payload: err.response.data });\r\n  }\r\n};\r\n\r\nexport const getProjects = () => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\r\n      // \"http://localhost:8080/api/project/all\"\r\n      \"/api/project/all\"\r\n    );\r\n    console.log(res);\r\n    dispatch({\r\n      type: GET_PROJECTS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n    dispatch({ type: GET_PROJECTS, payload: err.response.data });\r\n  }\r\n};\r\n\r\nexport const getProject = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\r\n      // `http://localhost:8080/api/project/${id}`\r\n      `/api/project/${id}`\r\n    );\r\n    dispatch({\r\n      type: GET_PROJECT,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    console.log(err.response.data);\r\n    dispatch({ type: GET_PROJECTS, payload: err.response.data });\r\n  }\r\n};\r\n\r\nexport const deleteProject = (id) => async (dispatch) => {\r\n  await axios.delete(\r\n    // `http://localhost:8080/api/project/${id}`\r\n    `/api/project/${id}`\r\n  );\r\n  dispatch({\r\n    type: DELETE_PROJECT,\r\n    payload: id,\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteProject } from \"../../actions/ProjectActions\";\r\nclass ProjectItem extends Component {\r\n  onDeleteClick = (id) => {\r\n    this.props.deleteProject(id);\r\n  };\r\n  render() {\r\n    const { project } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card card-body bg-light mb-3\">\r\n          <div className=\"row\">\r\n            <div className=\"col-2\">\r\n              <span className=\"mx-auto\">{project.projectIdentifier}</span>\r\n            </div>\r\n            <div className=\"col-lg-6 col-md-4 col-8\">\r\n              <h3>{project.projectName}</h3>\r\n              <p>{project.description}</p>\r\n            </div>\r\n            <div className=\"col-md-4 d-none d-lg-block\">\r\n              <ul className=\"list-group\">\r\n                <Link to={`/projectBoard/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item board\">\r\n                    <i className=\"fa fa-flag-checkered pr-1\">Project Board </i>\r\n                  </li>\r\n                </Link>\r\n                <Link to={`/updateProject/${project.projectIdentifier}`}>\r\n                  <li className=\"list-group-item update\">\r\n                    <i className=\"fa fa-edit pr-1\">Update Project Info</i>\r\n                  </li>\r\n                </Link>\r\n                <li\r\n                  className=\"list-group-item delete\"\r\n                  onClick={this.onDeleteClick.bind(\r\n                    this,\r\n                    project.projectIdentifier\r\n                  )}\r\n                >\r\n                  <i className=\"fa fa-minus-circle pr-1\">Delete Project</i>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectItem.propTypes = {\r\n  deleteProject: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { deleteProject })(ProjectItem);\r\n","import React, { Component } from \"react\";\r\nimport CreateProjectButton from \"./Project/CreateProjectButton\";\r\nimport ProjectItem from \"./Project/ProjectItem\";\r\nimport { connect } from \"react-redux\";\r\nimport { getProjects } from \"../actions/ProjectActions\";\r\nimport PropTypes from \"prop-types\";\r\nclass DashBoard extends Component {\r\n  componentDidMount() {\r\n    console.log(\"This is calling\");\r\n    this.props.getProjects();\r\n  }\r\n\r\n  render() {\r\n    const { projects } = this.props.project;\r\n    return (\r\n      <div className=\"projects\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center\">Projects</h1>\r\n              <br />\r\n              <CreateProjectButton />\r\n              <br />\r\n              <hr />\r\n              {projects.map((item) => (\r\n                <ProjectItem key={item.id} project={item} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashBoard.propTypes = {\r\n  project: PropTypes.object.isRequired,\r\n  getProjects: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({ project: state.project });\r\n\r\nexport default connect(mapStateToProps, { getProjects })(DashBoard);\r\n","import axios from \"axios\";\r\n\r\nconst setJWTToken = (token) => {\r\n  if (token) {\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  } else {\r\n    delete axios.defaults.headers.common[\"Authorization\"];\r\n  }\r\n};\r\nexport default setJWTToken;\r\n","import axios from \"axios\";\r\nimport setJWTToken from \"../securityUtils/setJWTToken\";\r\nimport { GET_ERRORS, SET_CURRENT_USER } from \"./Type\";\r\nimport jwt_decode from \"jwt-decode\";\r\nexport const createNewUser = (newUser) => async (dispatch) => {\r\n  try {\r\n    await axios.post(\r\n      // \"http://localhost:8080/api/users/register\"\r\n      \"/api/users/register\",\r\n\r\n      newUser\r\n    );\r\n    window.location.href = `/login`;\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {},\r\n    });\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const login = (LoginRequest) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.post(\r\n      // \"http://localhost:8080/api/users/login\",\r\n      \"/api/users/login\",\r\n      LoginRequest\r\n    );\r\n    console.log(res);\r\n    const { token } = res.data;\r\n    localStorage.setItem(\"jwtToken\", token);\r\n    setJWTToken(token);\r\n    const decoded = jwt_decode(token);\r\n    dispatch({\r\n      type: SET_CURRENT_USER,\r\n      payload: decoded,\r\n    });\r\n  } catch (err) {\r\n    console.log(err);\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem(\"jwtToken\");\r\n  setJWTToken(false);\r\n  dispatch({\r\n    type: SET_CURRENT_USER,\r\n    payload: {},\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { logout } from \"../../actions/SecurityActions\";\r\nimport { connect } from \"react-redux\";\r\nclass Header extends Component {\r\n  logout() {\r\n    this.props.logout();\r\n    window.location.href = \"/\";\r\n  }\r\n  render() {\r\n    const { validToken, user } = this.props.security;\r\n    const userIsAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav mr-auto\">\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"/dashboard\">\r\n              Dashboard\r\n            </a>\r\n          </li>\r\n        </ul>\r\n\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link \" to=\"/dashboard\">\r\n              <i className=\"fas fa-user-circle mr-1\">{user.fullname}</i>\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link\r\n              className=\"nav-link\"\r\n              to=\"/logout\"\r\n              onClick={this.logout.bind(this)}\r\n            >\r\n              Logout\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n    const userIsNotAuthenticated = (\r\n      <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/register\">\r\n              Sign Up\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/login\">\r\n              Login\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n    let headerLinks;\r\n    if (validToken && user) {\r\n      headerLinks = userIsAuthenticated;\r\n    } else {\r\n      headerLinks = userIsNotAuthenticated;\r\n    }\r\n\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n          <a className=\"navbar-brand\" href=\"/\">\r\n            Personal Project Management Tool\r\n          </a>\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          {headerLinks}\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\nHeader.propTypes = {\r\n  logout: PropTypes.func.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n});\r\nexport default connect(mapStateToProps, { logout })(Header);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { connectAdvanced } from \"react-redux\";\r\nimport { createProject } from \"../../actions/ProjectActions\";\r\nimport classnames from \"classnames\";\r\nclass AddProject extends Component {\r\n  constructor() {\r\n    super();\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n\r\n    this.state = {\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      errors: {},\r\n    };\r\n  }\r\n\r\n  // Life cycle hooks\r\n  componentWillReceiveProps(nextProps) {\r\n    console.log(nextProps);\r\n    if (nextProps.error) {\r\n      console.log(nextProps.error);\r\n      this.setState({ errors: nextProps.error });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newProject = {\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      startDate: this.state.startDate,\r\n      endDate: this.state.endDate,\r\n    };\r\n    this.props.createProject(newProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Create Project form</h5>\r\n              <hr />\r\n\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.projectName,\r\n                    })}\r\n                    placeholder=\"Project Name\"\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.projectIdentifier,\r\n                    })}\r\n                    placeholder=\"Unique Project ID\"\r\n                    name=\"projectIdentifier\"\r\n                    value={this.state.projectIdentifier}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectIdentifier && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.projectIdentifier}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.description,\r\n                    })}\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"startDate\"\r\n                    value={this.state.startDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"endDate\"\r\n                    value={this.state.endDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProject.propTypes = {\r\n  createProject: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  error: state.errors,\r\n});\r\nexport default connect(mapStateToProps, { createProject })(AddProject);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { deleteProjectTask } from \"../../../actions/BacklogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nclass ProjectTask extends Component {\r\n  onDeleteClick(backlog_id, pt_id) {\r\n    this.props.deleteProjectTask(backlog_id, pt_id);\r\n  }\r\n  render() {\r\n    const { project_task } = this.props;\r\n    let priorityString;\r\n    let priorityClass;\r\n    if (project_task.priority === 1) {\r\n      priorityClass = \"bg-danger text-light\";\r\n      priorityString = \"HIGH\";\r\n    } else if (project_task.priority === 2) {\r\n      priorityClass = \"bg-warning text-light\";\r\n      priorityString = \"MEDIUM\";\r\n    } else {\r\n      priorityClass = \"bg-info text-light\";\r\n      priorityString = \"LOW\";\r\n    }\r\n    return (\r\n      <div className={`card mb-1 bg-light`}>\r\n        <div className={`card-header text-primary  ${priorityClass}`}>\r\n          ID: {project_task.projectSequence} -- Priority:{` ${priorityString} `}\r\n          {project_task.priority}\r\n        </div>\r\n        <div className=\"card-body bg-light\">\r\n          <h5 className=\"card-title\">{project_task.summary}</h5>\r\n          <p className=\"card-text text-truncate \">\r\n            {project_task.acceptanceCriteria}\r\n          </p>\r\n          <Link\r\n            to={`/updateProjectTask/${project_task.projectIdentifier}/${project_task.projectSequence}`}\r\n            className=\"btn btn-primary\"\r\n          >\r\n            View / Update\r\n          </Link>\r\n\r\n          <button\r\n            className=\"btn btn-danger ml-4\"\r\n            onClick={this.onDeleteClick.bind(\r\n              this,\r\n              project_task.projectIdentifier,\r\n              project_task.projectSequence\r\n            )}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectTask.propTypes = {\r\n  deleteProjectTask: PropTypes.func.isRequired,\r\n};\r\nexport default connect(null, { deleteProjectTask })(ProjectTask);\r\n","import axios from \"axios\";\r\nimport {\r\n  GET_ERRORS,\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK,\r\n} from \"./Type\";\r\n\r\nexport const addProjectTask =\r\n  (backlog_id, project_task, history) => async (dispatch) => {\r\n    try {\r\n      await axios.post(\r\n        // `http://localhost:8080/api/backlog/${backlog_id}`,\r\n        `/api/backlog/${backlog_id}`,\r\n\r\n        project_task\r\n      );\r\n      window.location.href = `/projectBoard/${backlog_id}`;\r\n      dispatch({ type: GET_ERRORS, payload: {} });\r\n    } catch (err) {\r\n      dispatch({ type: GET_ERRORS, payload: err.response.data });\r\n    }\r\n  };\r\n\r\nexport const getBacklog = (backlog_id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\r\n      // `http://localhost:8080/api/backlog/${backlog_id}`\r\n      `/api/backlog/${backlog_id}`\r\n    );\r\n    dispatch({ type: GET_BACKLOG, payload: res.data });\r\n  } catch (err) {\r\n    dispatch({ type: GET_ERRORS, payload: err.response.data });\r\n  }\r\n};\r\n\r\nexport const getProjectTask = (backlog_id, pt_id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(\r\n      // `http://localhost:8080/api/backlog/${backlog_id}/${pt_id}`\r\n      `/api/backlog/${backlog_id}/${pt_id}`\r\n    );\r\n    dispatch({ type: GET_PROJECT_TASK, payload: res.data });\r\n  } catch (err) {\r\n    window.location.href = `/dashboard`;\r\n\r\n    dispatch({ type: GET_ERRORS, payload: err.response.data });\r\n  }\r\n};\r\n\r\nexport const updateProjectTask =\r\n  (backlog_id, project_task) => async (dispatch) => {\r\n    try {\r\n      await axios.patch(\r\n        // `http://localhost:8080/api/backlog/${backlog_id}`,\r\n        `/api/backlog/${backlog_id}`,\r\n        project_task\r\n      );\r\n      window.location.href = `/projectBoard/${backlog_id}`;\r\n      dispatch({ type: GET_ERRORS, payload: {} });\r\n    } catch (err) {\r\n      dispatch({ type: GET_ERRORS, payload: err.response.data });\r\n    }\r\n  };\r\n\r\nexport const deleteProjectTask = (backlog_id, pt_id) => async (dispatch) => {\r\n  if (\r\n    window.confirm(\r\n      `You are deleting project task ${pt_id}, this action cannot be undone`\r\n    )\r\n  ) {\r\n    const res = await axios.delete(\r\n      // `http://localhost:8080/api/backlog/${backlog_id}/${pt_id}`\r\n      `/api/backlog/${backlog_id}/${pt_id}`\r\n    );\r\n    dispatch({ type: DELETE_PROJECT_TASK, payload: pt_id });\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\r\nimport ProjectTask from \"./ProjectTasks/ProjectTask\";\r\n\r\nclass Backlog extends Component {\r\n  render() {\r\n    const { project_tasks_prop } = this.props;\r\n    const tasks = project_tasks_prop.map((project_task) => (\r\n      <ProjectTask key={project_task.id} project_task={project_task} />\r\n    ));\r\n\r\n    let todoItems = [];\r\n    let inProgressItems = [];\r\n    let doneItems = [];\r\n    for (let i = 0; i < tasks.length; i++) {\r\n      console.log(tasks[i].props.project_task.status);\r\n      if (tasks[i].props.project_task.status == \"TO_DO\") {\r\n        todoItems.push(tasks[i]);\r\n      }\r\n      if (tasks[i].props.project_task.status == \"IN_PROGRESS\") {\r\n        inProgressItems.push(tasks[i]);\r\n      }\r\n      if (tasks[i].props.project_task.status == \"DONE\") {\r\n        doneItems.push(tasks[i]);\r\n      }\r\n    }\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-secondary text-white\">\r\n                <h3>TO DO</h3>\r\n              </div>\r\n            </div>\r\n            {/* <!-- SAMPLE PROJECT TASK STARTS HERE --> */}\r\n            {todoItems}\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-primary text-white\">\r\n                <h3>In Progress</h3>\r\n              </div>\r\n            </div>\r\n            {/* <!-- SAMPLE PROJECT TASK STARTS HERE -->\r\n\r\n                    <!-- SAMPLE PROJECT TASK ENDS HERE --> */}\r\n            {inProgressItems}\r\n          </div>\r\n          <div className=\"col-md-4\">\r\n            <div className=\"card text-center mb-2\">\r\n              <div className=\"card-header bg-success text-white\">\r\n                <h3>Done</h3>\r\n              </div>\r\n            </div>\r\n            {doneItems}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Backlog;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Backlog from \"./Backlog\";\r\nimport { connect } from \"react-redux\";\r\nimport { getBacklog } from \"../../actions/BacklogActions\";\r\nimport PropTypes from \"prop-types\";\r\nclass ProjectBoard extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      errors: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    this.props.getBacklog(id);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { project_tasks } = this.props.backlog;\r\n    const { errors } = this.state;\r\n    let BoardContent;\r\n\r\n    const boardAlgorithm = (errors, project_tasks) => {\r\n      if (project_tasks.length < 1) {\r\n        if (errors.projectNotFound) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectNotFound}\r\n            </div>\r\n          );\r\n        } else if (errors.projectIdentifier) {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              {errors.projectIdentifier}\r\n            </div>\r\n          );\r\n        } else {\r\n          return (\r\n            <div className=\"alert alert-danger text-center\" role=\"alert\">\r\n              No project task on this board\r\n            </div>\r\n          );\r\n        }\r\n      } else {\r\n        return <Backlog project_tasks_prop={project_tasks} />;\r\n      }\r\n    };\r\n    BoardContent = boardAlgorithm(errors, project_tasks);\r\n    return (\r\n      <div className=\"container\">\r\n        <Link to={`/addProjectTask/${id}`} className=\"btn btn-primary mb-3\">\r\n          <i className=\"fas fa-plus-circle\"> Create Project Task</i>\r\n        </Link>\r\n        <br />\r\n        <hr />\r\n        {BoardContent}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nProjectBoard.propTypes = {\r\n  backlog: PropTypes.object.isRequired,\r\n  getBacklog: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  backlog: state.backlog,\r\n  errors: state.errors,\r\n});\r\nexport default connect(mapStateToProps, { getBacklog })(ProjectBoard);\r\n","import { GET_ERRORS } from \"../actions/Type\";\r\n\r\nconst initialState = {};\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n      break;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { GET_PROJECTS, GET_PROJECT, DELETE_PROJECT } from \"../actions/Type\";\r\nconst initialState = {\r\n  projects: [],\r\n  project: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_PROJECTS:\r\n      return {\r\n        ...state,\r\n        projects: action.payload,\r\n      };\r\n    case GET_PROJECT:\r\n      return {\r\n        ...state,\r\n        project: action.payload,\r\n      };\r\n    case DELETE_PROJECT:\r\n      return {\r\n        ...state,\r\n        projects: state.projects.filter(\r\n          (project) => project.projectIdentifier !== action.payload\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  GET_BACKLOG,\r\n  GET_PROJECT_TASK,\r\n  DELETE_PROJECT_TASK,\r\n} from \"../actions/Type\";\r\n\r\nconst initialState = {\r\n  project_tasks: [],\r\n  project_task: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_BACKLOG:\r\n      return {\r\n        ...state,\r\n        project_tasks: action.payload,\r\n      };\r\n\r\n    case GET_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_task: action.payload,\r\n      };\r\n\r\n    case DELETE_PROJECT_TASK:\r\n      return {\r\n        ...state,\r\n        project_tasks: state.project_tasks.filter(\r\n          (project_task) => project_task.projectSequence !== action.payload\r\n        ),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_CURRENT_USER } from \"../actions/Type\";\r\n\r\nconst initialState = {\r\n  user: {},\r\n  validToken: false,\r\n};\r\n\r\nconst booleanActionPayload = (payload) => {\r\n  if (payload) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        validToken: booleanActionPayload(action.payload),\r\n        user: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport projectReducer from \"./projectReducer.js\";\r\nimport backlogReducer from \"./backlogReducer\";\r\nimport securityReducer from \"./securityReducer\";\r\nexport default combineReducers({\r\n  errors: errorReducer,\r\n  project: projectReducer,\r\n  backlog: backlogReducer,\r\n  security: securityReducer,\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nlet store;\r\nconst ReactReduxDevTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n// if (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n//   store = createStore(\r\n//     rootReducer,\r\n//     initialState,\r\n//     compose(applyMiddleware(...middleware)),\r\n//     ReactReduxDevTools\r\n//   );\r\n// } else {\r\nstore = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(applyMiddleware(...middleware))\r\n);\r\n// }\r\n\r\nexport default store;\r\n","import React, { Component } from \"react\";\r\nimport { getProject, createProject } from \"../../actions/ProjectActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\n\r\nclass UpdateProject extends Component {\r\n  constructor() {\r\n    super();\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      projectName: \"\",\r\n      projectIdentifier: \"\",\r\n      description: \"\",\r\n      startDate: \"\",\r\n      endDate: \"\",\r\n      errors: {},\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    const {\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      startDate,\r\n      endDate,\r\n    } = nextProps.project;\r\n    this.setState({\r\n      id,\r\n      projectName,\r\n      projectIdentifier,\r\n      description,\r\n      startDate,\r\n      endDate,\r\n    });\r\n    console.log(nextProps.error);\r\n\r\n    if (nextProps.error) {\r\n      console.log(nextProps.error);\r\n      this.setState({ errors: nextProps.error });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    //\r\n    const { id } = this.props.match.params;\r\n    this.props.getProject(id);\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const updateProject = {\r\n      id: this.state.id,\r\n      projectName: this.state.projectName,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      description: this.state.description,\r\n      startDate: this.state.startDate,\r\n      endDate: this.state.endDate,\r\n    };\r\n    this.props.createProject(updateProject, this.props.history);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n\r\n    return (\r\n      <div className=\"project\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-4 text-center\">Update Project form</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.projectName,\r\n                    })}\r\n                    placeholder=\"Project Name\"\r\n                    name=\"projectName\"\r\n                    value={this.state.projectName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.projectName && (\r\n                    <div className=\"invalid-feedback\">{errors.projectName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.projectIdentifier,\r\n                    })}\r\n                    placeholder=\"Unique Project ID\"\r\n                    name=\"projectIdentifier\"\r\n                    value={this.state.projectIdentifier}\r\n                    onChange={this.onChange}\r\n                    disabled\r\n                  />\r\n                  {errors.projectIdentifier && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.projectIdentifier}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.description,\r\n                    })}\r\n                    placeholder=\"Project Description\"\r\n                    name=\"description\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.description}\r\n                  />\r\n                  {errors.description && (\r\n                    <div className=\"invalid-feedback\">{errors.description}</div>\r\n                  )}\r\n                </div>\r\n                <h6>Start Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"startDate\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.startDate}\r\n                  />\r\n                </div>\r\n                <h6>Estimated End Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"endDate\"\r\n                    onChange={this.onChange}\r\n                    value={this.state.endDate}\r\n                  />\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProject.propTypes = {\r\n  getProject: PropTypes.func.isRequired,\r\n  project: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  project: state.project.project,\r\n  error: state.errors,\r\n});\r\nexport default connect(mapStateToProps, { getProject, createProject })(\r\n  UpdateProject\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { addProjectTask } from \"../../../actions/BacklogActions\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddProjectTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { id } = this.props.match.params;\r\n\r\n    this.state = {\r\n      summary: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: \"\",\r\n      dueDate: \"\",\r\n      projectIdentifier: id,\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newTask = {\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n    };\r\n    this.props.addProjectTask(\r\n      this.state.projectIdentifier,\r\n      newTask,\r\n      this.props.history\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const { id } = this.props.match.params;\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to={`/projectBoard/${id}`} className=\"btn btn-light\">\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Add Project Task</h4>\r\n              <p className=\"lead text-center\">Project Name + Project Code</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary,\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddProjectTask.propTypes = {\r\n  addProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({ erros: state.errors });\r\n\r\nexport default connect(null, { addProjectTask })(AddProjectTask);\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  getProjectTask,\r\n  updateProjectTask,\r\n} from \"../../../actions/BacklogActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass UpdateProjectTask extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { id } = this.props.match.params;\r\n\r\n    this.state = {\r\n      id: \"\",\r\n      summary: \"\",\r\n      projectSequence: \"\",\r\n      acceptanceCriteria: \"\",\r\n      status: \"\",\r\n      priority: \"\",\r\n      dueDate: \"\",\r\n      projectIdentifier: id,\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { backlog_id, pt_id } = this.props.match.params;\r\n    this.props.getProjectTask(backlog_id, pt_id);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    console.log(nextProps.errors);\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    const {\r\n      id,\r\n      summary,\r\n      projectSequence,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n    } = nextProps.project_task;\r\n    this.setState({\r\n      id,\r\n      summary,\r\n      projectSequence,\r\n      acceptanceCriteria,\r\n      status,\r\n      priority,\r\n      dueDate,\r\n      projectIdentifier,\r\n    });\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const updatedTask = {\r\n      id: this.state.id,\r\n      summary: this.state.summary,\r\n      acceptanceCriteria: this.state.acceptanceCriteria,\r\n      status: this.state.status,\r\n      priority: this.state.priority,\r\n      dueDate: this.state.dueDate,\r\n      projectIdentifier: this.state.projectIdentifier,\r\n      projectSequence: this.state.projectSequence,\r\n    };\r\n    console.log(updatedTask);\r\n    this.props.updateProjectTask(this.state.projectIdentifier, updatedTask);\r\n  }\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"add-PBI\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link\r\n                to={`/projectBoard/${this.state.projectIdentifier}`}\r\n                className=\"btn btn-light\"\r\n              >\r\n                Back to Project Board\r\n              </Link>\r\n              <h4 className=\"display-4 text-center\">Update Project Task</h4>\r\n              <p className=\"lead text-center\">\r\n                Project Name: {this.state.projectIdentifier} + Project Code:{\" \"}\r\n                {this.state.projectSequence}\r\n              </p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary,\r\n                    })}\r\n                    name=\"summary\"\r\n                    placeholder=\"Project Task summary\"\r\n                    value={this.state.summary}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.summary && (\r\n                    <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    placeholder=\"Acceptance Criteria\"\r\n                    name=\"acceptanceCriteria\"\r\n                    value={this.state.acceptanceCriteria}\r\n                    onChange={this.onChange}\r\n                  ></textarea>\r\n                </div>\r\n                <h6>Due Date</h6>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"date\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"dueDate\"\r\n                    value={this.state.dueDate}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"priority\"\r\n                    value={this.state.priority}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value={0}>Select Priority</option>\r\n                    <option value={1}>High</option>\r\n                    <option value={2}>Medium</option>\r\n                    <option value={3}>Low</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <select\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"status\"\r\n                    value={this.state.status}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <option value=\"\">Select Status</option>\r\n                    <option value=\"TO_DO\">TO DO</option>\r\n                    <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                    <option value=\"DONE\">DONE</option>\r\n                  </select>\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUpdateProjectTask.propTypes = {\r\n  getProjectTask: PropTypes.func.isRequired,\r\n  project_task: PropTypes.object.isRequired,\r\n  updateProjectTask: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  project_task: state.backlog.project_task,\r\n  errors: state.errors,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getProjectTask, updateProjectTask })(\r\n  UpdateProjectTask\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Landing extends Component {\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      window.location.href = \"/dashboard\";\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"landing\">\r\n        <div className=\"light-overlay landing-inner text-dark\">\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-md-12 text-center\">\r\n                <h1 className=\"display-3 mb-4\">\r\n                  Personal Project Management Tool\r\n                </h1>\r\n                <p className=\"lead\">\r\n                  Create your account to join active projects or start your own\r\n                </p>\r\n                <hr />\r\n                <Link className=\"btn btn-lg btn-primary mr-2\" to=\"/register\">\r\n                  Sign Up\r\n                </Link>\r\n                <Link to=\"/login\" className=\"btn btn-lg btn-secondary mr-2\">\r\n                  Login\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLanding.propTypes = {\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  // errors: state.errors,\r\n  security: state.security,\r\n});\r\nexport default connect(mapStateToProps)(Landing);\r\n","import React, { Component } from \"react\";\r\nimport { createNewUser } from \"../../actions/SecurityActions\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nclass Register extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      fullname: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newUser = {\r\n      username: this.state.username,\r\n      fullname: this.state.fullname,\r\n      password: this.state.password,\r\n      confirmPassword: this.state.confirmPassword,\r\n    };\r\n\r\n    this.props.createNewUser(newUser);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"register\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Sign Up</h1>\r\n              <p className=\"lead text-center\">Create your Account</p>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.fullname,\r\n                    })}\r\n                    placeholder=\"Full Name\"\r\n                    name=\"fullname\"\r\n                    value={this.state.fullname}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.fullname && (\r\n                    <div className=\"invalid-feedback\">{errors.fullname}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username,\r\n                    })}\r\n                    placeholder=\"Email Address {Username}\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password,\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.confirmPassword,\r\n                    })}\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"confirmPassword\"\r\n                    value={this.state.confirmPassword}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.confirmPassword && (\r\n                    <div className=\"invalid-feedback\">\r\n                      {errors.confirmPassword}\r\n                    </div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRegister.propTypes = {\r\n  createNewUser: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  errors: state.errors,\r\n  security: state.security,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createNewUser })(Register);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport classnames from \"classnames\";\r\nimport { login } from \"../../actions/SecurityActions\";\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      errors: {},\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    console.log(nextProps.security.validToken);\r\n    if (nextProps.security.validToken) {\r\n      window.location.href = `/dashboard`;\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.security.validToken) {\r\n      window.location.href = \"/dashboard\";\r\n    }\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const LogonRequest = {\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n    };\r\n\r\n    this.props.login(LogonRequest);\r\n  }\r\n\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"login\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h1 className=\"display-4 text-center\">Log In</h1>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"email\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.username,\r\n                    })}\r\n                    placeholder=\"Email Address\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.username && (\r\n                    <div className=\"invalid-feedback\">{errors.username}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.password,\r\n                    })}\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.password && (\r\n                    <div className=\"invalid-feedback\">{errors.password}</div>\r\n                  )}\r\n                </div>\r\n                <input type=\"submit\" className=\"btn btn-info btn-block mt-4\" />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nLogin.propTypes = {\r\n  login: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n  errors: state.errors,\r\n});\r\nexport default connect(mapStateToProps, { login })(Login);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { Component } from \"react\";\r\nconst SecuredRoute = ({ component: Component, security, ...otherProps }) => (\r\n  <Route\r\n    {...otherProps}\r\n    render={(props) =>\r\n      security.validToken === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nSecuredRoute.propTypes = {\r\n  security: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  security: state.security,\r\n});\r\nexport default connect(mapStateToProps)(SecuredRoute);\r\n","import \"./App.css\";\nimport Dashboard from \"./components/Dashboard\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddProject from \"./components/Project/AddProject\";\nimport ProjectBoard from \"./components/ProjectBoard/ProjectBoard\";\n// Hook react with redux, grap whole thing with <Provider>\nimport { Provider } from \"react-redux\";\nimport { SET_CURRENT_USER } from \"./actions/Type\";\nimport store from \"./store\";\nimport UpdateProject from \"./components/Project/UpdateProject\";\nimport AddProjectTask from \"./components/ProjectBoard/ProjectTasks/AddProjectTask\";\nimport UpdateProjectTask from \"./components/ProjectBoard/ProjectTasks/UpdateProjectTask\";\nimport Landing from \"./components/Layout/Landing\";\nimport Register from \"./components/UserManagement/Register\";\nimport Login from \"./components/UserManagement/Login\";\nimport jwt_decode from \"jwt-decode\";\nimport setJWTToken from \"./securityUtils/setJWTToken\";\nimport { logout } from \"./actions/SecurityActions\";\nimport SecureRoute from \"./securityUtils/SecureRoute\";\nconst jwtToken = localStorage.jwtToken;\nif (jwtToken) {\n  setJWTToken(jwtToken);\n  const decoded_jwtToken = jwt_decode(jwtToken);\n  store.dispatch({\n    type: SET_CURRENT_USER,\n    payload: decoded_jwtToken,\n  });\n\n  const currentTime = Date.now() / 1000;\n  if (decoded_jwtToken.exp < currentTime) {\n    store.dispatch(logout());\n    window.location.href = \"/\";\n  }\n}\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Header />\n          {\n            // Public Routes\n          }\n\n          <Route exact path=\"/\" component={Landing} />\n          <Route exact path=\"/register\" component={Register} />\n          <Route exact path=\"/login\" component={Login} />\n\n          {\n            // Private Routes\n          }\n          <Switch>\n            <SecureRoute exact path=\"/dashboard\" component={Dashboard} />\n\n            <SecureRoute exact path=\"/addProject\" component={AddProject} />\n            <SecureRoute\n              exact\n              path=\"/updateProject/:id\"\n              component={UpdateProject}\n            />\n            <SecureRoute\n              exact\n              path=\"/projectBoard/:id\"\n              component={ProjectBoard}\n            />\n            <SecureRoute\n              exact\n              path=\"/addProjectTask/:id\"\n              component={AddProjectTask}\n            />\n            <SecureRoute\n              exact\n              path=\"/updateProjectTask/:backlog_id/:pt_id\"\n              component={UpdateProjectTask}\n            />\n          </Switch>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}